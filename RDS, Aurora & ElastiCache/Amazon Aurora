# Amazon Aurora - Key Notes:

1. Overview of Aurora:

- Proprietary Technology: Amazon Aurora is a cloud-optimized database that is not open-source.
- Compatibility: Aurora is compatible with PostgreSQL and MySQL, meaning it can work with MySQL/PostgreSQL drivers.
- Performance:
    - 5x faster than MySQL on RDS.
    - 3x faster than PostgreSQL on RDS.
- Cloud-Optimized: Aurora is specifically designed to take advantage of cloud capabilities for better performance and scalability.

2. Storage and Auto Scaling:

- Automatic Storage Expansion: Aurora starts at 10GB and automatically scales up to 128TB without requiring manual intervention.
- No Worries about Disk Space: Aurora automatically handles storage scaling as you add data.

3. High Availability and Failover:

- Storage Across 3 AZs: Aurora stores six copies of your data across three availability zones (AZs) for high availability and durability.
- Write Availability: Aurora requires 4 out of 6 copies for writes and 3 out of 6 copies for reads.
- Self-Healing: If data is corrupted, Aurora can automatically heal it through peer-to-peer replication.
- Failover: Aurora offers fast failover (typically within 30 seconds) if the master instance fails.

4. Replication and Read Scaling:

- 15 Read Replicas: Aurora supports up to 15 read replicas to scale read operations.
- Low Replica Lag: Typically, replication lag is below 10 milliseconds.
- Cross-Region Replication: Aurora supports replication across different AWS regions.
- Scaling Read Workload: The read replicas help scale the read workload while the master instance handles writes.

5. Cluster Architecture:

- Master & Read Replicas: The master instance handles writes, while read replicas handle read requests.
Writer Endpoint: A DNS name that always points to the master instance, ensuring automatic redirection during failovers.
- Reader Endpoint: A DNS name that load-balances connections among all read replicas for efficient scaling.

6. Auto Scaling for Read Replicas:

- Auto Scaling: Aurora allows auto-scaling of read replicas to ensure you have the right number of replicas based on demand.
- Connection Management: The reader endpoint load-balances connections across the read replicas, simplifying connection management for applications.

7. Key Features:

- Automatic Failover: Fast failover process within 30 seconds.
- Backup and Recovery: Aurora provides automated backups, allowing for efficient recovery.
- Zero Downtime: Features like automated patching and routine maintenance are managed by AWS without downtime.
- Backtrack: The ability to restore data to a specific point in time without relying on backups. You can "backtrack" to any moment (e.g., a specific timestamp) within the retention window.

8. Cost and Efficiency:

- Cost: Aurora costs about 20% more than RDS, but it is more efficient at scale, making it cost-effective for large, high-demand workloads.

9. Summary:

- Cloud-Native Design: Auroraâ€™s cloud optimization, automatic storage expansion, replication across multiple AZs, and automatic failover contribute to its high availability and scalability.
- Use Cases: It is ideal for applications requiring high performance, scalability, and availability.
- Endpoints: Writer endpoint (for writes) and Reader endpoint (for read scaling and load balancing).