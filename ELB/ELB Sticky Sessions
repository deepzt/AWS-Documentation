## ELB Sticky Sessions (Session Affinity) Overview

### Key Characteristics

- **Purpose**: Ensure that a clientâ€™s requests are consistently routed to the same backend instance.
- **Applicable to**: Classic Load Balancer (CLB), Application Load Balancer (ALB).
- Network Load Balancer (NLB) doesn't use cookies.

### How It Works

1. **Client Requests**:
   - A client makes a request to the load balancer.
   - The load balancer routes the request to a specific backend instance.
   - Subsequent requests from the same client are routed to the same instance.

2. **Cookie Mechanism**:
   - A cookie is sent as part of the request from the client to the load balancer.
   - The cookie has an expiration date.
   - When the cookie expires, the client may be redirected to another instance.

### Use Cases

- **Session Persistence**: Ensures that user session data (e.g., login information) is maintained across requests.
- **Potential Imbalance**: May cause load imbalance if some instances receive more sticky users.

### Types of Cookies

1. **Application-Based Cookie**:
   - Generated by the target (application).
   - Custom attributes can be included.
   - Cookie name must be specified for each target group.
   - Reserved names: `AWSALB`, `AWSALBAPP`, `AWSALBTG`.

2. **Duration-Based Cookie**:
   - Generated by the load balancer.
   - Reserved Cookie name: `AWSALB` for ALB, `AWSELB` for CLB.
   - Has an expiry based on a specific duration set by the load balancer.

### Configuration Steps

1. **Enable Sticky Sessions**:
   - Go to the target group level in the AWS Management Console.
   - Edit the attributes of the target group.
   - Enable stickiness and choose the type of cookie (load balancer generated or application-based).

2. **Set Duration**:
   - For load balancer generated cookies, set the duration (1 second to 7 days).
   - For application-based cookies, specify the cookie name.

3. **Save Changes**:
   - Save the configuration changes.

### Example

1. **Enable Sticky Sessions**:
   - Choose Load balancer generated cookie.
   - Set duration to 1 day.
   - Save changes.

2. **Verify Stickiness**:
   - Open the web developer tools in your browser.
   - Inspect the network requests and cookies.
   - Observe that the same instance responds to multiple requests from the same client.

### Disabling Sticky Sessions

- Go back to the target group attributes.
- Disable stickiness to revert to normal load balancing behavior.

### Exam Tips

- **Remember**:
  - Sticky sessions ensure session persistence.
  - Two types of cookies: 
    - Application-based
    - Duration-based.

- **Configuration**: Know how to enable and configure sticky sessions in the AWS Management Console.